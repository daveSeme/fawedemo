<?php
/*
 * @ https://EasyToYou.eu - IonCube v10 Decoder Online
 * @ PHP 7.2
 * @ Decoder version: 1.0.4
 * @ Release: 01/09/2021
 */

echo "<script type=\"text/javascript\">\r\n    /* Activate smart panels */\r\n    \$('#js-page-content').smartPanel();\r\n\r\n</script>\r\n\r\n\r\n<script src=\"";
echo base_url();
echo "/public/js/dependency/moment/moment.js\"></script>\r\n<script src=\"";
echo base_url();
echo "/public/js/miscellaneous/fullcalendar/fullcalendar.bundle.js\"></script>\r\n<script src=\"";
echo base_url();
echo "/public/js/statistics/sparkline/sparkline.bundle.js\"></script>\r\n<script src=\"";
echo base_url();
echo "/public/js/statistics/easypiechart/easypiechart.bundle.js\"></script>\r\n<script src=\"";
echo base_url();
echo "/public/js/statistics/flot/flot.bundle.js\"></script>\r\n<script src=\"";
echo base_url();
echo "/public/js/miscellaneous/jqvmap/jqvmap.bundle.js\"></script>\r\n\r\n\r\n<script>\r\n    \$(document).ready(function ()\r\n    {\r\n        //\$('#js-page-content').smartPanel(); \r\n\r\n        //\r\n        //\r\n        var dataSetPie = [\r\n            {\r\n                label: \"Asia\",\r\n                data: 4119630000,\r\n                color: color.primary._500\r\n            },\r\n            {\r\n                label: \"Latin America\",\r\n                data: 590950000,\r\n                color: color.info._500\r\n            },\r\n            {\r\n                label: \"Africa\",\r\n                data: 1012960000,\r\n                color: color.warning._500\r\n            },\r\n            {\r\n                label: \"Oceania\",\r\n                data: 95100000,\r\n                color: color.danger._500\r\n            },\r\n            {\r\n                label: \"Europe\",\r\n                data: 727080000,\r\n                color: color.success._500\r\n            },\r\n            {\r\n                label: \"North America\",\r\n                data: 344120000,\r\n                color: color.fusion._400\r\n            }];\r\n\r\n\r\n        \$.plot(\$(\"#flotPie\"), dataSetPie,\r\n                {\r\n                    series:\r\n                            {\r\n                                pie:\r\n                                        {\r\n                                            innerRadius: 0.5,\r\n                                            show: true,\r\n                                            radius: 1,\r\n                                            label:\r\n                                                    {\r\n                                                        show: true,\r\n                                                        radius: 2 / 3,\r\n                                                        threshold: 0.1\r\n                                                    }\r\n                                        }\r\n                            },\r\n                    legend:\r\n                            {\r\n                                show: false\r\n                            }\r\n                });\r\n\r\n\r\n        \$.plot('#flotBar1', [\r\n            {\r\n                data: [\r\n                    [1, 0],\r\n                    [2, 0],\r\n                    [3, 0],\r\n                    [4, 1],\r\n                    [5, 3],\r\n                    [6, 3],\r\n                    [7, 10],\r\n                    [8, 11],\r\n                    [9, 10],\r\n                    [10, 9],\r\n                    [11, 12],\r\n                    [12, 8],\r\n                    [13, 10],\r\n                    [14, 6],\r\n                    [15, 3]\r\n                ],\r\n                bars:\r\n                        {\r\n                            show: true,\r\n                            lineWidth: 0,\r\n                            fillColor: color.fusion._50,\r\n                            barWidth: .3,\r\n                            order: 'left'\r\n                        }\r\n            },\r\n            {\r\n                data: [\r\n                    [1, 0],\r\n                    [2, 0],\r\n                    [3, 1],\r\n                    [4, 2],\r\n                    [5, 2],\r\n                    [6, 5],\r\n                    [7, 8],\r\n                    [8, 12],\r\n                    [9, 10],\r\n                    [10, 11],\r\n                    [11, 3]\r\n                ],\r\n                bars:\r\n                        {\r\n                            show: true,\r\n                            lineWidth: 0,\r\n                            fillColor: color.success._500,\r\n                            barWidth: .3,\r\n                            align: 'right'\r\n                        }\r\n            }],\r\n                {\r\n                    grid:\r\n                            {\r\n                                borderWidth: 0,\r\n                            },\r\n                    yaxis:\r\n                            {\r\n                                min: 0,\r\n                                max: 15,\r\n                                tickColor: 'rgba(0,0,0,0.05)',\r\n                                ticks: [\r\n                                    [0, ''],\r\n                                    [5, '\$5000'],\r\n                                    [10, '\$25000'],\r\n                                    [15, '\$45000']\r\n                                ],\r\n                                font:\r\n                                        {\r\n                                            color: '#444',\r\n                                            size: 10\r\n                                        }\r\n                            },\r\n                    xaxis:\r\n                            {\r\n                                mode: 'categories',\r\n                                tickColor: 'rgba(0,0,0,0.05)',\r\n                                ticks: [\r\n                                    [0, '3am'],\r\n                                    [1, '4am'],\r\n                                    [2, '5am'],\r\n                                    [3, '6am'],\r\n                                    [4, '7am'],\r\n                                    [5, '8am'],\r\n                                    [6, '9am'],\r\n                                    [7, '10am'],\r\n                                    [8, '11am'],\r\n                                    [9, '12nn'],\r\n                                    [10, '1pm'],\r\n                                    [11, '2pm'],\r\n                                    [12, '3pm'],\r\n                                    [13, '4pm'],\r\n                                    [14, '5pm']\r\n                                ],\r\n                                font:\r\n                                        {\r\n                                            color: '#999',\r\n                                            size: 9\r\n                                        }\r\n                            }\r\n                });\r\n\r\n\r\n        /*\r\n         * VECTOR MAP\r\n         */\r\n\r\n        var data_array = {\r\n            \"af\": \"16.63\",\r\n            \"al\": \"0\",\r\n            \"dz\": \"158.97\",\r\n            \"ao\": \"85.81\",\r\n            \"ag\": \"1.1\",\r\n            \"ar\": \"351.02\",\r\n            \"am\": \"8.83\",\r\n            \"au\": \"1219.72\",\r\n            \"at\": \"366.26\",\r\n            \"az\": \"52.17\",\r\n            \"bs\": \"7.54\",\r\n            \"bh\": \"21.73\",\r\n            \"bd\": \"105.4\",\r\n            \"bb\": \"3.96\",\r\n            \"by\": \"52.89\",\r\n            \"be\": \"461.33\",\r\n            \"bz\": \"1.43\",\r\n            \"bj\": \"6.49\",\r\n            \"bt\": \"1.4\",\r\n            \"bo\": \"19.18\",\r\n            \"ba\": \"16.2\",\r\n            \"bw\": \"12.5\",\r\n            \"br\": \"2023.53\",\r\n            \"bn\": \"11.96\",\r\n            \"bg\": \"44.84\",\r\n            \"bf\": \"8.67\",\r\n            \"bi\": \"1.47\",\r\n            \"kh\": \"11.36\",\r\n            \"cm\": \"21.88\",\r\n            \"ca\": \"1563.66\",\r\n            \"cv\": \"1.57\",\r\n            \"cf\": \"2.11\",\r\n            \"td\": \"7.59\",\r\n            \"cl\": \"199.18\",\r\n            \"cn\": \"5745.13\",\r\n            \"co\": \"283.11\",\r\n            \"km\": \"0.56\",\r\n            \"cd\": \"12.6\",\r\n            \"cg\": \"11.88\",\r\n            \"cr\": \"35.02\",\r\n            \"ci\": \"22.38\",\r\n            \"hr\": \"59.92\",\r\n            \"cy\": \"22.75\",\r\n            \"cz\": \"195.23\",\r\n            \"dk\": \"304.56\",\r\n            \"dj\": \"1.14\",\r\n            \"dm\": \"0.38\",\r\n            \"do\": \"50.87\",\r\n            \"ec\": \"61.49\",\r\n            \"eg\": \"216.83\",\r\n            \"sv\": \"21.8\",\r\n            \"gq\": \"14.55\",\r\n            \"er\": \"2.25\",\r\n            \"ee\": \"19.22\",\r\n            \"et\": \"30.94\",\r\n            \"fj\": \"3.15\",\r\n            \"fi\": \"231.98\",\r\n            \"fr\": \"2555.44\",\r\n            \"ga\": \"12.56\",\r\n            \"gm\": \"1.04\",\r\n            \"ge\": \"11.23\",\r\n            \"de\": \"3305.9\",\r\n            \"gh\": \"18.06\",\r\n            \"gr\": \"305.01\",\r\n            \"gd\": \"0.65\",\r\n            \"gt\": \"40.77\",\r\n            \"gn\": \"4.34\",\r\n            \"gw\": \"0.83\",\r\n            \"gy\": \"2.2\",\r\n            \"ht\": \"6.5\",\r\n            \"hn\": \"15.34\",\r\n            \"hk\": \"226.49\",\r\n            \"hu\": \"132.28\",\r\n            \"is\": \"0\",\r\n            \"in\": \"1430.02\",\r\n            \"id\": \"695.06\",\r\n            \"ir\": \"337.9\",\r\n            \"iq\": \"84.14\",\r\n            \"ie\": \"204.14\",\r\n            \"il\": \"201.25\",\r\n            \"it\": \"2036.69\",\r\n            \"jm\": \"13.74\",\r\n            \"jp\": \"5390.9\",\r\n            \"jo\": \"27.13\",\r\n            \"kz\": \"129.76\",\r\n            \"ke\": \"32.42\",\r\n            \"ki\": \"0.15\",\r\n            \"kw\": \"117.32\",\r\n            \"kg\": \"4.44\",\r\n            \"la\": \"6.34\",\r\n            \"lv\": \"23.39\",\r\n            \"lb\": \"39.15\",\r\n            \"ls\": \"1.8\",\r\n            \"lr\": \"0.98\",\r\n            \"lt\": \"35.73\",\r\n            \"lu\": \"52.43\",\r\n            \"mk\": \"9.58\",\r\n            \"mg\": \"8.33\",\r\n            \"mw\": \"5.04\",\r\n            \"my\": \"218.95\",\r\n            \"mv\": \"1.43\",\r\n            \"ml\": \"9.08\",\r\n            \"mt\": \"7.8\",\r\n            \"mr\": \"3.49\",\r\n            \"mu\": \"9.43\",\r\n            \"mx\": \"1004.04\",\r\n            \"md\": \"5.36\",\r\n            \"rw\": \"5.69\",\r\n            \"ws\": \"0.55\",\r\n            \"st\": \"0.19\",\r\n            \"sa\": \"434.44\",\r\n            \"sn\": \"12.66\",\r\n            \"rs\": \"38.92\",\r\n            \"sc\": \"0.92\",\r\n            \"sl\": \"1.9\",\r\n            \"sg\": \"217.38\",\r\n            \"sk\": \"86.26\",\r\n            \"si\": \"46.44\",\r\n            \"sb\": \"0.67\",\r\n            \"za\": \"354.41\",\r\n            \"es\": \"1374.78\",\r\n            \"lk\": \"48.24\",\r\n            \"kn\": \"0.56\",\r\n            \"lc\": \"1\",\r\n            \"vc\": \"0.58\",\r\n            \"sd\": \"65.93\",\r\n            \"sr\": \"3.3\",\r\n            \"sz\": \"3.17\",\r\n            \"se\": \"444.59\",\r\n            \"ch\": \"522.44\",\r\n            \"sy\": \"59.63\",\r\n            \"tw\": \"426.98\",\r\n            \"tj\": \"5.58\",\r\n            \"tz\": \"22.43\",\r\n            \"th\": \"312.61\",\r\n            \"tl\": \"0.62\",\r\n            \"tg\": \"3.07\",\r\n            \"to\": \"0.3\",\r\n            \"tt\": \"21.2\",\r\n            \"tn\": \"43.86\",\r\n            \"tr\": \"729.05\",\r\n            \"tm\": \"0\",\r\n            \"ug\": \"17.12\",\r\n            \"ua\": \"136.56\",\r\n            \"ae\": \"239.65\",\r\n            \"gb\": \"2258.57\",\r\n            \"us\": \"14624.18\",\r\n            \"uy\": \"40.71\",\r\n            \"uz\": \"37.72\",\r\n            \"vu\": \"0.72\",\r\n            \"ve\": \"285.21\",\r\n            \"vn\": \"101.99\",\r\n            \"ye\": \"30.02\",\r\n            \"zm\": \"15.69\",\r\n            \"zw\": \"0\"\r\n        };\r\n\r\n        \$('#vector-map').vectorMap(\r\n                {\r\n                    map: 'world_en',\r\n                    backgroundColor: 'transparent',\r\n                    color: color.warning._50,\r\n                    borderOpacity: 0.5,\r\n                    borderWidth: 1,\r\n                    hoverColor: color.success._300,\r\n                    hoverOpacity: null,\r\n                    selectedColor: color.success._500,\r\n                    selectedRegions: ['US'],\r\n                    enableZoom: true,\r\n                    showTooltip: true,\r\n                    scaleColors: [color.primary._400, color.primary._50],\r\n                    values: data_array,\r\n                    normalizeFunction: 'polynomial',\r\n                    onRegionClick: function (element, code, region)\r\n                    {\r\n                        /*var message = 'You clicked \"'\r\n                         + region\r\n                         + '\" which has the code: '\r\n                         + code.toLowerCase();\r\n                         \r\n                         console.log(message);*/\r\n\r\n                        var randomNumber = Math.floor(Math.random() * 10000000);\r\n                        var arrow;\r\n\r\n                        if (Math.random() >= 0.5 == true)\r\n                        {\r\n                            arrow = '<div class=\"ml-2 d-inline-flex\"><i class=\"fal fa-caret-up text-success fs-xs\"></i></div>'\r\n                        } else\r\n                        {\r\n                            arrow = '<div class=\"ml-2 d-inline-flex\"><i class=\"fal fa-caret-down text-danger fs-xs\"></i></div>'\r\n                        }\r\n\r\n                        \$('.js-jqvmap-flag').attr('src', 'https://lipis.github.io/flag-icon-css/flags/4x3/' + code.toLowerCase() + '.svg');\r\n                        \$('.js-jqvmap-country').html(region + ' - ' + '\$' + randomNumber.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"\$1,\") + arrow);\r\n                    }\r\n                });\r\n\r\n\r\n        /* TAB 1: UPDATING CHART */\r\n        var data = [],\r\n                totalPoints = 200;\r\n        var getRandomData = function ()\r\n        {\r\n            if (data.length > 0)\r\n                data = data.slice(1);\r\n\r\n            // do a random walk\r\n            while (data.length < totalPoints)\r\n            {\r\n                var prev = data.length > 0 ? data[data.length - 1] : 50;\r\n                var y = prev + Math.random() * 10 - 5;\r\n                if (y < 0)\r\n                    y = 0;\r\n                if (y > 100)\r\n                    y = 100;\r\n                data.push(y);\r\n            }\r\n\r\n            // zip the generated y values with the x values\r\n            var res = [];\r\n            for (var i = 0; i < data.length; ++i)\r\n                res.push([i, data[i]])\r\n            return res;\r\n        }\r\n        // setup control widget\r\n        var updateInterval = 1500;\r\n        \$(\"#updating-chart\").val(updateInterval).change(function ()\r\n        {\r\n\r\n            var v = \$(this).val();\r\n            if (v && !isNaN(+v))\r\n            {\r\n                updateInterval = +v;\r\n                \$(this).val(\"\" + updateInterval);\r\n            }\r\n\r\n        });\r\n        // setup plot\r\n        var options = {\r\n            colors: [color.primary._700],\r\n            series:\r\n                    {\r\n                        lines:\r\n                                {\r\n                                    show: true,\r\n                                    lineWidth: 0.5,\r\n                                    fill: 0.9,\r\n                                    fillColor:\r\n                                            {\r\n                                                colors: [\r\n                                                    {\r\n                                                        opacity: 0.6\r\n                                                    },\r\n                                                    {\r\n                                                        opacity: 0\r\n                                                    }]\r\n                                            },\r\n                                },\r\n                        shadowSize: 0 // Drawing is faster without shadows\r\n                    },\r\n            grid:\r\n                    {\r\n                        borderColor: 'rgba(0,0,0,0.05)',\r\n                        borderWidth: 1,\r\n                        labelMargin: 5\r\n                    },\r\n            xaxis:\r\n                    {\r\n                        color: '#F0F0F0',\r\n                        tickColor: 'rgba(0,0,0,0.05)',\r\n                        font:\r\n                                {\r\n                                    size: 10,\r\n                                    color: '#999'\r\n                                }\r\n                    },\r\n            yaxis:\r\n                    {\r\n                        min: 0,\r\n                        max: 100,\r\n                        color: '#F0F0F0',\r\n                        tickColor: 'rgba(0,0,0,0.05)',\r\n                        font:\r\n                                {\r\n                                    size: 10,\r\n                                    color: '#999'\r\n                                }\r\n                    }\r\n        };\r\n        var plot = \$.plot(\$(\"#updating-chart\"), [getRandomData()], options);\r\n        /* live switch */\r\n        \$('input[type=\"checkbox\"]#start_interval').click(function ()\r\n        {\r\n            if (\$(this).prop('checked'))\r\n            {\r\n                \$on = true;\r\n                updateInterval = 1500;\r\n                update();\r\n            } else\r\n            {\r\n                clearInterval(updateInterval);\r\n                \$on = false;\r\n            }\r\n        });\r\n        var update = function ()\r\n        {\r\n            if (\$on == true)\r\n            {\r\n                plot.setData([getRandomData()]);\r\n                plot.draw();\r\n                setTimeout(update, updateInterval);\r\n\r\n            } else\r\n            {\r\n                clearInterval(updateInterval)\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        /*calendar */\r\n        var todayDate = moment().startOf('day');\r\n        var YM = todayDate.format('YYYY-MM');\r\n        var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\r\n        var TODAY = todayDate.format('YYYY-MM-DD');\r\n        var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\r\n\r\n\r\n        var calendarEl = document.getElementById('calendar');\r\n\r\n        var calendar = new FullCalendar.Calendar(calendarEl,\r\n                {\r\n                    plugins: ['dayGrid', 'list', 'timeGrid', 'interaction', 'bootstrap'],\r\n                    themeSystem: 'bootstrap',\r\n                    timeZone: 'UTC',\r\n                    //dateAlignment: \"month\", //week, month\r\n                    buttonText:\r\n                            {\r\n                                today: 'today',\r\n                                month: 'month',\r\n                                week: 'week',\r\n                                day: 'day',\r\n                                list: 'list'\r\n                            },\r\n                    eventTimeFormat:\r\n                            {\r\n                                hour: 'numeric',\r\n                                minute: '2-digit',\r\n                                meridiem: 'short'\r\n                            },\r\n                    navLinks: true,\r\n                    header:\r\n                            {\r\n                                left: 'title',\r\n                                center: '',\r\n                                right: 'today prev,next'\r\n                            },\r\n                    footer:\r\n                            {\r\n                                left: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\r\n                                center: '',\r\n                                right: ''\r\n                            },\r\n                    editable: true,\r\n                    eventLimit: true, // allow \"more\" link when too many events\r\n                    events: [\r\n                        {\r\n                            title: 'All Day Event',\r\n                            start: YM + '-01',\r\n                            description: 'This is a test description', //this is currently bugged: https://github.com/fullcalendar/fullcalendar/issues/1795\r\n                            className: \"border-warning bg-warning text-dark\"\r\n                        },\r\n                        {\r\n                            title: 'Reporting',\r\n                            start: YM + '-14T13:30:00',\r\n                            end: YM + '-14',\r\n                            className: \"bg-white border-primary text-primary\"\r\n                        },\r\n                        {\r\n                            title: 'Surgery oncall',\r\n                            start: YM + '-02',\r\n                            end: YM + '-03',\r\n                            className: \"bg-primary border-primary text-white\"\r\n                        },\r\n                        {\r\n                            title: 'NextGen Expo 2019 - Product Release',\r\n                            start: YM + '-03',\r\n                            end: YM + '-05',\r\n                            className: \"bg-info border-info text-white\"\r\n                        },\r\n                        {\r\n                            title: 'Dinner',\r\n                            start: YM + '-12',\r\n                            end: YM + '-10'\r\n                        },\r\n                        {\r\n                            id: 999,\r\n                            title: 'Repeating Event',\r\n                            start: YM + '-09T16:00:00',\r\n                            className: \"bg-danger border-danger text-white\"\r\n                        },\r\n                        {\r\n                            id: 1000,\r\n                            title: 'Repeating Event',\r\n                            start: YM + '-16T16:00:00'\r\n                        },\r\n                        {\r\n                            title: 'Conference',\r\n                            start: YESTERDAY,\r\n                            end: TOMORROW,\r\n                            className: \"bg-success border-success text-white\"\r\n                        },\r\n                        {\r\n                            title: 'Meeting',\r\n                            start: TODAY + 'T10:30:00',\r\n                            end: TODAY + 'T12:30:00',\r\n                            className: \"bg-primary text-white border-primary\"\r\n                        },\r\n                        {\r\n                            title: 'Lunch',\r\n                            start: TODAY + 'T12:00:00',\r\n                            className: \"bg-info border-info\"\r\n                        },\r\n                        {\r\n                            title: 'Meeting',\r\n                            start: TODAY + 'T14:30:00',\r\n                            className: \"bg-warning text-dark border-warning\"\r\n                        },\r\n                        {\r\n                            title: 'Happy Hour',\r\n                            start: TODAY + 'T17:30:00',\r\n                            className: \"bg-success border-success text-white\"\r\n                        },\r\n                        {\r\n                            title: 'Dinner',\r\n                            start: TODAY + 'T20:00:00',\r\n                            className: \"bg-danger border-danger text-white\"\r\n                        },\r\n                        {\r\n                            title: 'Birthday Party',\r\n                            start: TOMORROW + 'T07:00:00',\r\n                            className: \"bg-primary text-white border-primary text-white\"\r\n                        },\r\n                        {\r\n                            title: 'Gotbootstrap Meeting',\r\n                            url: 'http://gotbootstrap.com/',\r\n                            start: YM + '-28',\r\n                            className: \"bg-info border-info text-white\"\r\n                        }],\r\n                    viewSkeletonRender: function ()\r\n                    {\r\n                        \$('.fc-toolbar .btn-default').addClass('btn-sm');\r\n                        \$('.fc-header-toolbar h2').addClass('fs-md');\r\n                        \$('#calendar').addClass('fc-reset-order')\r\n                    },\r\n                });\r\n\r\n        calendar.render();\r\n    });\r\n\r\n</script>\r\n";

?>